[duplicate_pin_override]
pins: PA4, PA2, PA1

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: -100
max_temp: 100

[temperature_sensor nozzle_mcu]
sensor_type: temperature_mcu
sensor_mcu: nozzle_mcu
min_temp: 10
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#[load_cell]
#sensor_type: ads1220
#cs_pin: PC0
#   The pin connected to the ADS1220 chip select line. This parameter must
#   be provided.
#spi_speed: 512000
#   This chip supports 2 speeds: 256000 or 512000. The faster speed is only
#   enabled when one of the Turbo sample rates is used. The correct spi_speed
#   is selected based on the sample rate.
#spi_bus: spi2
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#data_ready_pin: PC15 #Probe Port, far left am Manta M5P
#   Pin connected to the ADS1220 data ready line. This parameter must be
#   provided.
#gain: 128
#   Valid gain values are 128, 64, 32, 16, 8, 4, 2, 1
#   The default is 128
#pga_bypass: False
#   Disable the internal Programmable Gain Amplifier. If
#   True the PGA will be disabled for gains 1, 2, and 4. The PGA is always
#   enabled for gain settings 8 to 128, regardless of the pga_bypass setting.
#   If AVSS is used as an input pga_bypass is forced to True.
#   The default is False.
#sample_rate: 660
#   This chip supports two ranges of sample rates, Normal and Turbo. In turbo
#   mode the chip's internal clock runs twice as fast and the SPI communication
#   speed is also doubled.
#   Normal sample rates: 20, 45, 90, 175, 330, 600, 1000
#   Turbo sample rates: 40, 90, 180, 350, 660, 1200, 2000
#   The default is 660
#input_mux:
#   Input multiplexer configuration, select a pair of pins to use. The first pin
#   is the positive, AINP, and the second pin is the negative, AINN. Valid
#   values are: 'AIN0_AIN1', 'AIN0_AIN2', 'AIN0_AIN3', 'AIN1_AIN2', 'AIN1_AIN3',
#   'AIN2_AIN3', 'AIN1_AIN0', 'AIN3_AIN2', 'AIN0_AVSS', 'AIN1_AVSS', 'AIN2_AVSS'
#   and 'AIN3_AVSS'. If AVSS is used the PGA is bypassed and the pga_bypass
#   setting will be forced to True.
#   The default is AIN0_AIN1.
#vref:
#   The selected voltage reference. Valid values are: 'internal', 'REF0', 'REF1'
#   and 'analog_supply'. Default is 'internal'.

[probe]
##  Super Pinda:
pin: ^nozzle_mcu:PB9
speed: 5
lift_speed: 30.0
samples: 2
samples_result: median
sample_retract_dist: 0.8
samples_tolerance: 0.005
samples_tolerance_retries: 5
x_offset: -33.0
y_offset: 7.00
z_offset: 0.360

[safe_z_home]
home_xy_position: 139, 102 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
z_hop: 10
z_hop_speed: 25
speed: 200

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 0, 8  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 187, 180 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 5, 5
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.


[verify_heater extruder]
[verify_heater heater_bed]
check_gain_time: 120
heating_gain: 1.0
hysteresis: 10

[idle_timeout]
timeout: 99999999

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

[gcode_arcs]
resolution: 0.1

[stepper_x]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA13
microsteps: 64
rotation_distance: 72
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 222
position_min: 0
position_max: 222
homing_speed: 35
homing_retract_dist:0

[tmc2209 stepper_x]
uart_pin:PD8
interpolate: True
run_current:1.4
hold_current:1.0
stealthchop_threshold: 0
diag_pin: ^PD2
driver_SGTHRS: 65
sense_resistor: 0.100

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 64
rotation_distance: 72
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -0.5
position_min: -0.5
position_max: 218
homing_speed: 35
homing_retract_dist:0

[tmc2209 stepper_y]
uart_pin:PB10
interpolate: True
run_current:1.4
hold_current:1.0
stealthchop_threshold: 0
diag_pin: PC3
driver_SGTHRS: 55
sense_resistor: 0.100

[stepper_z]
step_pin: PC8
dir_pin: PC9
enable_pin: !PA15
microsteps: 16
rotation_distance: 8
gear_ratio: 64:20
endstop_pin: probe:z_virtual_endstop
#position_endstop: 20 #need to check!
position_max: 255
position_min: -10
#homing_speed: 10
#custom
#second_homing_speed: 1
#homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: PD9
run_current: 0.8
#diag_pin: ^PC3
stealthchop_threshold: 0
driver_SGTHRS: 0
sense_resistor: 0.100

[extruder]
max_extrude_only_distance: 1000.0
max_extrude_cross_section: 80
step_pin: nozzle_mcu:PD0
dir_pin: !nozzle_mcu:PD1
enable_pin: !nozzle_mcu:PD2
microsteps: 16
rotation_distance: 6.9
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: nozzle_mcu:PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: nozzle_mcu:PA3
#pressure_advance: 0.021
#pressure_advance_smooth_time: 0.035
#control: watermark
control: pid
pid_Kp: 25.013
pid_Ki: 2.566
pid_Kd: 60.966
min_temp: 0
max_temp: 320

[tmc2209 extruder]
uart_pin: nozzle_mcu:PA15
#tx_pin: nozzle_mcu:PB10
run_current: 0.5
#sense_resistor: 0.150
stealthchop_threshold: 0


[firmware_retraction]
retract_length: 0.85
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 35

[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: watermark
control: pid
pid_kp: 64.243
pid_ki: 0.931
pid_kd: 1108.189
min_temp: 0
max_temp: 120

#[filament_switch_sensor filament_sensor]
#pause_on_runout: true
#switch_pin: !PC2

#[filament_switch_sensor filament_sensor_2]
#pause_on_runout: true
#switch_pin: !nozzle_mcu:PA10


[multi_pin heater_fans]
pins:nozzle_mcu:PA0,PA1

[heater_fan hotend_fan]
pin: multi_pin:heater_fans
heater: extruder
heater_temp: 40

[temperature_sensor chamber_temp]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
min_temp: -170
max_temp: 270

[static_digital_output my_fan_output_pins]
pins: nozzle_mcu: PB6

[output_pin fan0]
pin: nozzle_mcu: PA1
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 0.00
scale: 255
shutdown_value: 0.0

[output_pin fan1]
pin: PA4
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 0.00
scale: 255
shutdown_value: 0.0

[output_pin fan2]
pin: PA3
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 0.00
scale: 255
shutdown_value: 0.0



[temperature_fan chamber_fan]
pin: PA4
cycle_time: 0.0100
hardware_pwm: false
max_power: 1
shutdown_speed: 0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
min_temp: 0
max_temp: 70
control: watermark
max_delta: 2
target_temp: 35.0
max_speed: 1.0
min_speed: 0.0

[output_pin LED]
pin: CB1:gpio79
pwm: false
#hardware_pwm: false
value: 1
#scale: 255
shutdown_value: 0.0

[output_pin LED_Sitepanel]
pin: PA7
pwm: false
#hardware_pwm: false
value: 1
#scale: 100
shutdown_value: 0.0

#[output_pin power]
#pin: !PC15
#pwm: false
#hardware_pwm: false
#value: 1
#scale: 255
#shutdown_value: 0

[gcode_button kill_switch]
pin:  PC15 #IND_DET
press_gcode: 
  M112
  {action_respond_info("Kill-Switch gedrÃ¼ckt! Was war denn jetzt schon wieder? -.-'")}

[adxl345]
cs_pin: nozzle_mcu:PB12
spi_speed: 5000000
axes_map: x,-z,y
spi_software_sclk_pin: nozzle_mcu:PB10
spi_software_mosi_pin: nozzle_mcu:PB11
spi_software_miso_pin: nozzle_mcu:PB2

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 75
probe_points:
   110,110,10


[display_status]

[printer]
kinematics: corexy
max_velocity: 800
max_accel: 20000
minimum_cruise_ratio: 0.5
max_z_velocity: 20
square_corner_velocity: 5.0
max_z_accel: 300

[pause_resume]

[axis_twist_compensation]
speed: 300
horizontal_move_z: 5
calibrate_start_x: 20
calibrate_end_x: 200
calibrate_y: 112.5

