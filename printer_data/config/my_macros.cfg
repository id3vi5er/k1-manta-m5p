[gcode_macro PURGE_POSITION]
gcode:
    {% if printer.toolhead.position.z < 42 %}
        G0 Z45 F3000 ; Stelle sicher, dass Z mindestens 45 ist
    {% endif %}
    G0 X140.1 F6000 ; Bewege die X-Achse
    G0 Y218 F6000 ; Bewege die Y-Achse
    M106 P0 S255

[gcode_macro CLEAR_PURGE]
gcode:
    {% if printer.toolhead.position.z < 42 %}
        G0 Z45 F3000 ; Stelle sicher, dass Z mindestens 45 ist
    {% endif %}
    G0 X140.1 Y218 F6000 ; Poistion sicherstellen
    G0 Y218 F6000 ; etwas nach vorne, damit es sich nicht verhakt
    G4 P5000
    G92 E5 F750
    G0 X167 F600 ; langsam nach rechts zum abwischen
    G0 Y200 F600 ; fahrt von Hopper nach vorne
    G0 Y200 F6000 ;erneutes zuruckfahren
    G0 X140.1 F6000  
    G0 Y218 F3000
    G0 Y200 F10000
    G0 Y218 F3000
    G0 Y200 F10000
    G0 Y218 F3000
    G0 Y200 F10000

[gcode_macro TEST_PURGING_POSITION]
gcode:
    PURGE_POSITION
    G92 E0
    G1 E100 F750 ; Extrudiere 50mm mit 12mm/s (720mm/min)
    CLEAR_PURGE
    G0 X50 Y50 F6000

[gcode_macro NOZZLE_WIPE]
gcode:
  G0 X78 Y217.5 Z5 F10000 ; Bewege zur Startposition
  G1 X140 Y217.5 F7500 ; Lineare Bewegung 
  G1 X78 Z5 F5000
  G1 X140 Y217.5 Z4.5 F5000
  G1 Y217.5 F2000 ; zur Mitte
  G1 X85 F2000
  G1 X109 Y210

[gcode_macro LDC_CAL]
gcode:
  {"LDC_CALIBRATE_DRIVE_CURRENT CHIP=btt_eddy"}

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True


[gcode_macro M106]
gcode:
 {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
 {% set fan = 0 %}
 {% set value = 0 %}
 {% if params.P is defined %}
   {% set tmp = params.P|int %}
   {% if tmp < fans %}
     {% set fan = tmp %}
   {% endif %}
 {% endif %}
 {% if params.S is defined %}
   {% set tmp = params.S|float %}
 {% else %}
   {% set tmp = 255 %}
 {% endif %}
 {% if tmp > 0 %}
   {% if fan == 0 %}
     {% set value = (255 - printer["gcode_macro PRINTER_PARAM"].fan0_min) / 255 * tmp %}
     {% if printer['gcode_macro Qmode'].flag | int == 1 %}
       SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan0_value VALUE={printer["gcode_macro PRINTER_PARAM"].fan0_min + value}
       {% if value > (255 - printer['gcode_macro PRINTER_PARAM'].fan0_min) / 2  %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + (255 - printer['gcode_macro PRINTER_PARAM'].fan0_min) / 2 %}
       {% else %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + value %}
       {% endif %}
     {% else %}
       {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + value %}
     {% endif %}
   {% endif %}
   {% if fan == 1 %}
     {% set value = (255 - printer["gcode_macro PRINTER_PARAM"].fan1_min) / 255 * tmp %}
     {% if printer['gcode_macro Qmode'].flag | int == 1 %}
       SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan1_value VALUE={printer["gcode_macro PRINTER_PARAM"].fan1_min + value}
       {% if value > (255 - printer['gcode_macro PRINTER_PARAM'].fan1_min) / 2  %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan1_min + (255 - printer['gcode_macro PRINTER_PARAM'].fan1_min) / 2 %}
       {% else %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan1_min + value %}
       {% endif %}
     {% else %}
       {% set value = printer["gcode_macro PRINTER_PARAM"].fan1_min + value %}
     {% endif %}
   {% endif %}
   {% if fan == 2 %}
     {% set value = (255 - printer["gcode_macro PRINTER_PARAM"].fan2_min) / 255 * tmp %}
     {% if printer['gcode_macro Qmode'].flag | int == 1 %}
       SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan2_value VALUE={printer["gcode_macro PRINTER_PARAM"].fan2_min + value}
       {% if value > (255 - printer['gcode_macro PRINTER_PARAM'].fan2_min) / 2  %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan2_min + (255 - printer['gcode_macro PRINTER_PARAM'].fan2_min) / 2 %}
       {% else %}
         {% set value = printer["gcode_macro PRINTER_PARAM"].fan2_min + value %}
       {% endif %}
     {% else %}
       {% set value = printer["gcode_macro PRINTER_PARAM"].fan2_min + value %}
     {% endif %}
   {% endif %}
 {% endif %}
 {% if value >= 255 %}
   {% set value = 255 %}
 {% endif %}
 SET_PIN PIN=fan{fan} VALUE={value}

#[gcode_macro M106]
#description: Custom fan control feature that allows slicers like Orca or S3D to adopt bambu lab-specific auxiliary fan control to define the speed of the auxiliary cooling fan, or exhaust fan
##rename_existing: M106.1
#gcode:
#  {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
#  {% if params.P is defined %}
#    {% if params.P|int < fans %}
#      SET_PIN PIN=fan{params.P|int} VALUE=0
#    {% else %}
#      SET_PIN PIN=fan0 VALUE=0
#    {% endif %}
#  {% else %}
#    SET_PIN PIN=fan0 VALUE=0
#    SET_PIN PIN=fan2 VALUE=0
#  {% endif %}
  
[gcode_macro M107]
gcode:
  {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
  {% if params.P is defined %}
    {% if params.P|int < fans %}
      SET_PIN PIN=fan{params.P|int} VALUE=0
    {% else %}
      SET_PIN PIN=fan0 VALUE=0
    {% endif %}
  {% else %}
    SET_PIN PIN=fan0 VALUE=0
    SET_PIN PIN=fan2 VALUE=0
  {% endif %}


[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}